1. For what computational reason did you type elf64?
I typed elf64 because it goes through the 64 bit operating system.
2. Why did you use ld?
We used ld because it needed to be converted to logarithm.
3. Why did you not have to use chmod to make sample executable?
We didn't use the chmod to execute because the code is already compiled to run on its own.
Now - change the code to print your name. You should change the program so that it actually prints your name.
Post the code in your journal
global _start

        section .text
_start:
        ; write(1, message, 14)
        mov     rax, 1                  ;system call 1 is write
        mov     rdi, 1                  ; file handle 1 is stdout
        mov     rsi, message            ;address of string to output
        mov     rdx, 15                 ; number of bytes
        syscall                         ; invoke operating system to do the wri$

        ;exit(0)
        mov     eax, 60                 ; system call 60 is exit
        xor     rdi, rdi                ; exit code 0
        syscall                         ; invoke operating system to exit
message:
        db       "Anthony Roeder", 14    ; note the newline at the end



4. What problem did you have to solve to get it to work?
I had to recompile the code.
5. Given your actual experience with Assembly now --- Is assembly 'quick and easy'? Why or why not?
No it really isn't.
6. What does 'low level' actually mean with regards to programming languages?
 low-level programming language is a programming language that provides little or no abstraction from a computer's commands.
